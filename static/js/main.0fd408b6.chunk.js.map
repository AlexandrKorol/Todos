{"version":3,"sources":["reducers/reducers.js","redux/store.js","components/toDoList.js","components/InputField.js","components/List.js","components/CommentList.js","components/Comments.js","components/TodoSection.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["initialState","locale","itemList","comments","active","newToDoId","commentId","reducer","state","action","type","payload","result","filter","item","id","payload2","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","logger","createLogger","middlewares","thunk","rootReducer","combineReducers","i18n","i18nReducer","todoState","reducers","store","createStore","applyMiddleware","syncTranslationWithStore","dispatch","loadTranslations","en","toDo","languages","toDoItems","removeToDoItem","addNew","ru","setLocale","connect","list","activateToDo","deleteToDo","props","removeToDo","e","stopPropagation","newList","className","length","map","key","onClick","title","commentItem","Button","variant","color","classes","root","value","toDoList","index","addToDo","todo","time","createAt","setIndex","useState","inputValue","setState","inputRef","useRef","OutlinedInput","label","onChange","target","ref","size","date","Date","current","firstChild","List","Paper","useStyles","makeStyles","theme","square","backgroundColor","deepOrange","CommentList","undefined","ownId","Avatar","body","postId","addComment","comment","sizes","multiline","TodoSection","Grid","container","justify","xs","md","style","minHeight","options","myStyles","option","provided","background","menu","control","border","valueContainer","justifyContent","placeholder","singleValue","changeLocale","lang","defaultValue","classNamePrefix","name","styles","isSearchable","components","DropdownIndicator","IndicatorSeparator","App","display","height","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fd408b6.chunk.js","sourcesContent":["const initialState={\r\n    locale: \"en\",\r\n    itemList: [\r\n\r\n    ],\r\n    comments:[],\r\n    active: null,\r\n    newToDoId:0,\r\n    commentId:0,\r\n}\r\n\r\nconst reducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_TODO\":\r\n            return{\r\n                ...state,\r\n                itemList:[...state.itemList, action.payload]\r\n            }\r\n        case \"GET_INDEX\":\r\n            return{\r\n                ...state,\r\n                newToDoId: state.newToDoId + 1\r\n            }\r\n        case \"ACTIVATE_TODO\":\r\n            return{\r\n                ...state,\r\n                active: action.payload\r\n            }\r\n        case \"DELETE_TODO\":\r\n            let result = state.comments.filter(item=>item.id !== action.payload2)\r\n            return{\r\n                ...state,\r\n                itemList: action.payload,\r\n                comments: result,\r\n                active: null\r\n            }\r\n        case \"ADD_COMMENT\":\r\n            return{\r\n                ...state,\r\n                comments: [...state.comments, action.payload],\r\n                commentId: state.commentId + 1\r\n            }\r\n        default: return state\r\n    }\r\n    return state;\r\n}\r\nexport default reducer;","import { createStore, compose, combineReducers,applyMiddleware  } from 'redux';\r\nimport reducers from \"../reducers/reducers\";\r\nimport thunk from 'redux-thunk';\r\nimport { loadTranslations, setLocale, syncTranslationWithStore, i18nReducer } from 'react-redux-i18n';\r\nimport { createLogger } from 'redux-logger'\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst logger = createLogger({\r\n    // ...options\r\n  });\r\n\r\nconst middlewares = [thunk,logger]\r\n\r\nconst translationObject={\r\n    en:{\r\n        toDo: 'TODO',\r\n        languages: 'Languages',\r\n        toDoItems: 'Items',\r\n        removeToDoItem: 'Delete',\r\n        addNew: 'Add new',\r\n        comments: 'Comments'\r\n    },\r\n    ru:{\r\n        toDo: 'Список дел',\r\n        languages: \"Языки\",\r\n        toDoItems: 'Дела',\r\n        removeToDoItem: 'Удалить',\r\n        addNew: 'Добавить',\r\n        comments: 'Комментарии'\r\n    }\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    i18n: i18nReducer,\r\n    todoState: reducers\r\n  }) \r\n\r\nconst store =  createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares)),\r\n  );\r\n\r\n\r\nsyncTranslationWithStore(store)\r\nstore.dispatch(loadTranslations(translationObject));\r\nstore.dispatch(setLocale('en'));\r\nexport default store;","import React from 'react';\r\nimport {Translate} from 'react-redux-i18n';\r\nimport {connect} from \"react-redux\";\r\nimport Button from '@material-ui/core/Button';\r\nconst List = (props)=>{\r\n    \r\n    \r\n    \r\n    const makeActive=(id)=>(e)=>{\r\n        const {activateToDo}=props;\r\n        activateToDo(id);\r\n    }\r\n    const removeToDo=(id)=>(e)=>{\r\n        e.stopPropagation();\r\n        let newList = props.list.filter(item=>{\r\n            return item.id !== id\r\n        });\r\n        const {deleteToDo}=props;\r\n        deleteToDo(newList, id);\r\n    }\r\n    return(\r\n        \r\n            <div className=\"toDoListWrapper\">\r\n                <ul className=\"todoList\">\r\n                {\r\n                    props.list && props.list.length !==0 ? props.list.map(item=>{\r\n                    return(<li key={item.id} className ={item.id === props.active ? \r\n                                            \"todoListItem active\": \"todoListItem\"} onClick={makeActive(item.id)}>\r\n                                            <div className = 'toDoItemWrap'>\r\n                                        <div className=\"commentText\"><span className='innerTexts'>{item.title} </span>\r\n                                        {\r\n                            props.comments.filter((commentItem)=>item.id === commentItem.id).length !== 0 ?\r\n                            <span className=\"commentCounter\">{props.comments.filter((commentItem)=>item.id === commentItem.id).length}</span> : null\r\n                    }\r\n                        \r\n                    </div>\r\n                    \r\n                    <Button variant=\"outlined\" color=\"secondary\"classes={{root:'deleteBtn'}} onClick={removeToDo(item.id)}><Translate value='removeToDoItem'/> </Button></div></li>)\r\n                    }) :\r\n                    null\r\n                }\r\n                \r\n                </ul>\r\n            </div>\r\n        \r\n\r\n            \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        list: state.todoState.itemList,\r\n        comments: state.todoState.comments,\r\n        active: state.todoState.active\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>({\r\n    activateToDo: (id)=>{\r\n        dispatch({\r\n            type: \"ACTIVATE_TODO\",\r\n            payload: id\r\n        })\r\n    },\r\n    deleteToDo: (list, id)=>{\r\n        dispatch({\r\n            type:\"DELETE_TODO\",\r\n            payload: list,\r\n            payload2: id\r\n        })\r\n    }\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps ,mapDispatchToProps)(List);","import React, {useState, useRef} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {Translate} from 'react-redux-i18n';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst InputField = (props)=>{\r\n    const [inputValue, setState] = useState(0);\r\n    const inputRef = useRef(0);\r\n    const onChangeHandler=(e)=>{\r\n        setState(e.target.value);\r\n    }\r\n\r\n    \r\n    const addToDoItem=(e)=>{\r\n        if(inputValue === \"\")\r\n        {\r\n            return null\r\n        }\r\n        else{\r\n        const {addToDo, setIndex, index} = props;\r\n        const date = new Date();\r\n        addToDo(inputValue, index, date);\r\n        setState('');\r\n        inputRef.current.firstChild.value = '';\r\n        setIndex();\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n                \r\n                <form  className = \"inputField\">\r\n                <OutlinedInput label=\"Type name here\" className=\"textField\" onChange={onChangeHandler} ref={inputRef}/>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"medium\"  onClick={addToDoItem}>\r\n                    <Translate value='addNew'/>\r\n                </Button>\r\n                </form>\r\n                \r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// class InputField extends React.Component{\r\n    \r\n//     state={\r\n//         newItem:'',\r\n        \r\n//     }\r\n//     onChangeHandler=(e)=>{\r\n//         this.setState({\r\n//             newItem:e.target.value\r\n//         })\r\n//     }\r\n//     addToDoItem=(e)=>{\r\n//         if(this.state.newItem === \"\")\r\n//         {\r\n//             return null\r\n//         }\r\n//         else{\r\n//         const {addToDo, setIndex, index} = this.props;\r\n//         const {newItem} = this.state;\r\n//         const date = new Date();\r\n//         addToDo(newItem, index, date);\r\n//         this.setState({\r\n//             newItem:''\r\n//         })\r\n//         setIndex();\r\n//         }\r\n//     }\r\n    \r\n//     render(){\r\n//         return(\r\n//             <div>\r\n                \r\n//                 <form  className = \"inputField\">\r\n//                 <OutlinedInput label=\"Type name here\" className=\"textField\" onChange={this.onChangeHandler} />\r\n//                 <Button variant=\"contained\" color=\"primary\" size=\"medium\" className=\"btn\" onClick={this.addToDoItem}>\r\n//                     <Translate value='addNew'/>\r\n//                 </Button>\r\n//                 </form>\r\n                \r\n                \r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        toDoList: state.todoState.itemList,\r\n        index: state.todoState.newToDoId     \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=> ({\r\n    addToDo: (todo, key, time)=>{\r\n        dispatch({\r\n            type: \"ADD_TODO\",\r\n            payload: {\r\n                title: todo,\r\n                id:key,\r\n                comments:[],\r\n                createAt: time\r\n            }\r\n        })\r\n    },\r\n    setIndex: ()=>{\r\n        dispatch({\r\n            type: \"GET_INDEX\"\r\n        })\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(InputField);","import React from 'react';\r\nimport {Translate} from 'react-redux-i18n';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ToDoList from \"./toDoList\";\r\nimport InputField from './InputField';\r\nconst List = ()=>{\r\n    return(\r\n        \r\n            <div className=\"itemlist\">\r\n                <Paper className=\"list\"> \r\n                    <div className=\"toDoListHeader\">\r\n                        <h2><Translate value='toDoItems'/> </h2>\r\n                        <InputField />\r\n                    </div>\r\n                    <ToDoList />\r\n                    \r\n                </Paper>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    square: {\r\n        color: '#ff',\r\n        backgroundColor: deepOrange[500],\r\n    }\r\n}))\r\n\r\nconst CommentList =(props)=>{\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <ul>\r\n            {\r\n                props.comments !== undefined ? \r\n                props.comments.map(item=>{\r\n                    return item.id === props.active ? <li key = {item.ownId} className=\"commentItem\"> \r\n                                <Avatar variant=\"square\" className={classes.square}/> \r\n                                <span>{item.body}</span>\r\n                            </li> : null\r\n                }):null\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default CommentList;","import React, {useRef, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Translate} from 'react-redux-i18n';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CommentList from \"./CommentList\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { OutlinedInput } from '@material-ui/core';\r\nconst Comments = (props) =>{\r\n\r\n    const inputRef = useRef(0);\r\n    const [comment, setState] = useState(0);\r\n    \r\n    const setValue=(e)=>{\r\n        setState(e.target.value);\r\n    }\r\n    const addComment =()=>(e)=>{\r\n        if(comment.length === 0){\r\n            return null;\r\n        }\r\n        else{\r\n            props.addComment({\r\n                        id: props.postId,\r\n                        ownId: props.ownId,\r\n                        body: comment\r\n            });\r\n            inputRef.current.firstChild.value = '';\r\n        }\r\n    }\r\n    return(\r\n        \r\n            <div className=\"commentBlock\">\r\n                <Paper className=\"comments\">\r\n                    <h2><Translate value='comments'/> \r\n                    {\r\n                        props.postId !== null ? \r\n                        <span>#{props.postId + 1}</span>:\r\n                        null\r\n                    } </h2>\r\n\r\n                    {\r\n                        props.postId !== null ? \r\n                                <div className=\"commentsWrapper\"><CommentList comments={props.comments}active={props.active}/></div> : null\r\n                    }\r\n                    {\r\n                        props.postId !== null ? \r\n                                <div className=\"commentFieldWrapper\">\r\n                                    <div className=\"commentField\"><Avatar sizes=\"medium\" variant=\"square\" /> <OutlinedInput multiline id=\"outlined-basic\" variant=\"outlined\" \r\n                                        className=\"textField\" size=\"small\" onChange={setValue} ref={inputRef}/>\r\n                                    </div>\r\n                                    <div className=\"btnWithLine\">\r\n                                        <div className=\"lineForBtn\"></div>\r\n                                        <Button variant=\"contained\" color=\"primary\" size=\"medium\" className=\"btn\" onClick={addComment()}><Translate value='addNew'/> </Button>\r\n                                    </div>\r\n                                </div>: null\r\n                    }\r\n                </Paper>  \r\n            </div>  \r\n       \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return{\r\n    postId: state.todoState.active,\r\n    ownId: state.todoState.commentId,\r\n    comments: state.todoState.comments,\r\n    active: state.todoState.active\r\n   }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch)=> ({\r\n    addComment: (comment)=>{\r\n        dispatch({\r\n            type: \"ADD_COMMENT\",\r\n            payload: comment,\r\n        })\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Comments);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from './List';\r\nimport Comments from './Comments';\r\nconst TodoSection = () =>{\r\n    \r\n    return(\r\n        <div className=\"table\">\r\n            <Grid container justify=\"center\" className=\"todosec\"> \r\n                <Grid item  xs={12} md={6} style={{minHeight:600}}>\r\n                    <List />\r\n                </Grid>\r\n                <Grid item  xs={12} md={6}>\r\n                    <Comments />\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoSection;","import React from 'react';\r\nimport Select from 'react-select';\r\nimport {Translate} from 'react-redux-i18n';\r\nimport {setLocale} from 'react-redux-i18n';\r\nimport {connect} from 'react-redux';\r\n\r\nconst options = [\r\n  { value: 'en', label: 'English'},\r\n  { value: 'ru', label: 'Русский'}\r\n]\r\n\r\n  const myStyles={\r\n    \r\n    option:(provided, state)=>({\r\n      ...provided,\r\n      background: 'none',\r\n    })\r\n    ,\r\n    menu:(provided, state)=>({\r\n      ...provided,\r\n      backgroundColor: \"#F7AE4C\",\r\n      color: 'white',\r\n    }),\r\n    control: (provided,state) => ({\r\n      ...provided,\r\n      background: '#22A8FE',\r\n      border: 'none',\r\n      \r\n    }),\r\n    valueContainer: (provided, state)=>({\r\n      ...provided,\r\n      justifyContent: 'center',\r\n      \r\n    }),\r\n    placeholder:(provided, state)=>({\r\n      ...provided,\r\n      color: 'white'\r\n    }),\r\n    singleValue: (provided, state)=>({\r\n      ...provided,\r\n      color: 'white'\r\n    }),\r\n    \r\n  }\r\n\r\nconst Sidebar = (props)=>{\r\n    \r\n    const changeLanguage=(locale)=>{\r\n      \r\n      props.changeLocale(locale.value);\r\n    }\r\n    \r\n    return(\r\n        <div className=\"sidebar\">\r\n            <h2><Translate value='toDo'/></h2>\r\n                <Select\r\n                  defaultValue='en'\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  options={options}\r\n                  name=\"color\"\r\n                  styles={myStyles}\r\n                  isSearchable={false}\r\n                  components={{DropdownIndicator:() => null, IndicatorSeparator:() => null}}\r\n                  onChange={changeLanguage}\r\n                  placeholder='Language'\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch)=> ({\r\n    changeLocale: (lang)=>{\r\n      dispatch(setLocale(lang))\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Sidebar);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport TodoSection from './components/TodoSection';\nimport Sidebar from './components/Sidebar'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    \n        <Provider store={store}>\n           \n           \n            <Grid display='flex' container className='mainWrapper'>\n                  <Grid item xs={12} md={3} height={1}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item  xs={12} md={9}>\n                    <TodoSection />\n                  </Grid>\n              </Grid>\n           \n        </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}