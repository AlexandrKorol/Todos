{"version":3,"sources":["reducers/toDoListReducer.js","actions/ToDoList.js","reducers/commentsReducer.js","components/ToDoListElement.js","actions/Comments.js","components/toDoList.js","components/InputField.js","components/List.js","components/CommentListElement.js","components/CommentList.js","components/Comments.js","components/TodoSection.js","components/Sidebar.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["initialState","itemList","active","newToDoId","activateToDo","id","dispatch","getState","type","payload","commentsArray","commentId","connect","state","comments","toDoList","rmToDo","list","deleteToDo","filterComments","props","title","styles","makeStyles","toDoItemWrap","justifyContent","overflow","display","width","marginLeft","paddingBottom","paddingTop","todoListItem","cursor","content","position","height","background","borderBottom","deleteBtn","alignSelf","commentText","justifyItems","innerTexts","textOverflow","maxWidth","whiteSpace","commentCounter","marginRight","color","borderRadius","padding","customWidth","itemText","dots","fontSize","listRef","useRef","useState","setState","useEffect","checker","current","scrollWidth","offsetWidth","classes","amountOfComments","filter","commentItem","length","className","cn","onClick","e","makeActive","ref","Tooltip","Button","variant","stopPropagation","newList","item","filtered","map","index","ownId","removeToDo","value","List","toDoListWrapper","maxHeight","overflowY","overflowX","todoList","listStyle","margin","key","InputField","addToDo","setIndex","inputValue","inputRef","inputField","textField","input","btn","backgroundColor","OutlinedInput","label","onChange","target","size","date","Date","firstChild","todo","time","createAt","flexDirection","toDoListHeader","paddingLeft","minHeight","Paper","CommentListElement","body","square","deepOrange","commentTextArea","wordWrap","wrapper","useStyles","Avatar","CommentList","undefined","addComment","comment","commentBlock","commentsWrapper","commentFieldWrapper","marginTop","commentField","btnWithLine","lineForBtn","sizes","multiline","rowsMax","table","h2","fontWeight","TodoSection","Grid","container","justify","xs","md","style","options","myStyles","option","provided","menu","control","border","valueContainer","placeholder","singleValue","basicSingle","marginBottom","sidebar","Sidebar","changeLocale","defaultValue","classNamePrefix","name","isSearchable","components","DropdownIndicator","IndicatorSeparator","locale","mainWrapper","lang","setLocale","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","logger","createLogger","middlewares","thunk","rootReducer","combineReducers","i18n","i18nReducer","result","store","createStore","applyMiddleware","syncTranslationWithStore","loadTranslations","en","toDo","languages","toDoItems","removeToDoItem","addNew","ru","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53c979d3.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\r\nexport const GET_INDEX = 'GET_INDEX';\r\nexport const ACTIVATE_TODO = 'ACTIVATE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\n\r\nconst initialState = {\r\n\titemList: [],\r\n\tactive: null,\r\n\tnewToDoId: 0\r\n};\r\n\r\nexport const toDoListReducer = (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase ADD_TODO: {\r\n            payload.ownId = state.itemList.length\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titemList: [...state.itemList, payload]\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase GET_INDEX: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewToDoId: state.newToDoId + 1\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ACTIVATE_TODO: {\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase DELETE_TODO: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titemList: payload.list,\r\n\t\t\t\tactive: null\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};\r\n","import {\r\n\tACTIVATE_TODO,\r\n\tDELETE_TODO,\r\n\tADD_TODO,\r\n\tGET_INDEX\r\n} from '../reducers/toDoListReducer';\r\n\r\nexport const addToDo = (todo, key, time) => (dispatch, getState) => {\r\n\tdispatch({\r\n\t\ttype: ADD_TODO,\r\n\t\tpayload: {\r\n\t\t\ttitle: todo,\r\n            id: key,\r\n            ownId: key,\r\n\t\t\tcomments: [],\r\n\t\t\tcreateAt: time\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport const setIndex = () => dispatch => {\r\n\tdispatch({\r\n\t\ttype: GET_INDEX\r\n\t});\r\n};\r\n\r\nexport const activateToDo = id => (dispatch, getState) => {\r\n\tdispatch({\r\n\t\ttype: ACTIVATE_TODO,\r\n\t\tpayload: id\r\n\t});\r\n};\r\n\r\nexport const deleteToDo = (list, id) => (dispatch, getState) => {\r\n\tdispatch({\r\n\t\ttype: DELETE_TODO,\r\n\t\tpayload: { list, id }\r\n\t});\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const FILTER_COMMENTS = 'FILTER_COMMENTS';\r\nconst initialState = {\r\n\tcommentsArray: [],\r\n\tcommentId: 0\r\n};\r\n\r\nexport const commentsReducer = (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase ADD_COMMENT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcommentsArray: [...state.commentsArray, payload],\r\n\t\t\t\tcommentId: state.commentId + 1\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FILTER_COMMENTS: {\r\n\t\t\tlet result = state.commentsArray.filter(\r\n\t\t\t\titem => item.id !== payload\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcommentsArray: result\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Translate } from 'react-redux-i18n';\r\nimport {\r\n\tdeleteToDo,\r\n\tactivateToDo\r\n} from '../actions/ToDoList';\r\nimport { filterComments } from '../actions/Comments';\r\nimport { Button, makeStyles, Tooltip } from '@material-ui/core';\r\nimport cn from 'classnames';\r\nconst ListElement= props=>{\r\n    const {activateToDo, id, title, active, comments} = props;\r\n    \r\n    const makeActive = id => e => {\r\n        activateToDo(id);\r\n\t};\r\n\tconst removeToDo = id => e => {\r\n        const {toDoList, rmToDo, activateToDo} = props;\r\n\t\te.stopPropagation();\r\n\t\tlet newList = toDoList.filter((item) => {\r\n\t\t\treturn item.id !== id;\r\n\t\t});\r\n\t\tlet filtered = newList.map((item,index)=>{\r\n\t\t\treturn {...item, ownId: index}\r\n\r\n\t\t})\r\n\t\trmToDo(filtered, id);\r\n\t\tif(newList.length > 0)\r\n\t\tactivateToDo(filtered[filtered.length-1].id)\r\n\t\t\r\n    };\r\n    \r\n    const styles = makeStyles({\r\n\t\ttoDoItemWrap: {\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t\toverflow: 'hidden',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\twidth: '95%',\r\n\t\t\tmarginLeft: '30px',\r\n\t\t\tpaddingBottom: '10px',\r\n\t\t\tpaddingTop: '10px'\r\n\t\t},\r\n\t\t\r\n\t\ttodoListItem: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t\tcursor: 'pointer',\r\n\t\t\t'&.active':{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t'&:before':{\r\n\t\t\t\t\tcontent: '\" \"',\r\n\t\t\t\t\t  position: 'static',\r\n\t\t\t\t\t  width: '4px',\r\n\t\t\t\t\t  height: 'auto',\r\n\t\t\t\t\t  background: 'green',\r\n\t\t\t\t},\r\n\t\t\t\t'& $toDoItemWrap':{\r\n\t\t\t\t\tborderBottom: '1px solid lightgrey'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t},\r\n\t\tdeleteBtn:{\r\n\t\t\talignSelf: 'center'\r\n\t\t},\r\n\t\tcommentText: {\r\n\t\t\twidth: '85%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyItems: 'center',\r\n\t\t\talignSelf: 'center',\r\n\t\t\toverflow: 'hidden'\r\n\t\t},\r\n\t\tinnerTexts: {\r\n\t\t\ttextOverflow: 'ellipsis',\r\n\t\t\tmaxWidth: '94%',\r\n\t\t\toverflow: 'hidden',\r\n\t\t\twhiteSpace: 'nowrap'\r\n\t\t},\r\n\t\tcommentCounter: {\r\n\t\t\tmarginLeft: '5px',\r\n\t\t\talignSelf: 'flex-start',\r\n\t\t\tmarginRight: '10px',\r\n\t\t\tbackground: 'blue',\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderRadius: '15px',\r\n\t\t\tpadding: '1px 8px 1px 8px'\r\n\t\t},\r\n\t\tcustomWidth:{\r\n\t\t\tmaxWidth:'none',\r\n        },\r\n        itemText:{\r\n            display: 'grid',\r\n\t\t},\r\n\t\tdots:{\r\n            color: 'blue',\r\n            fontSize: '2rem'\r\n\t\t},\r\n\t\ttitle:{\r\n\t\t\toverflow: 'hidden',\r\n\t\t\ttextOverflow: 'ellipsis'\r\n\t\t}\r\n    });\r\n    let listRef = useRef(null);\r\n    const [state, setState] = useState(0);\r\n    useEffect(() => {\r\n        let checker=listRef.current.scrollWidth > listRef.current.offsetWidth;\r\n        setState(checker);\r\n    }, []);\r\n\tconst classes = styles();\r\n\tconst amountOfComments = comments.filter(commentItem =>id === commentItem.id).length;\r\n    return(\r\n            <li  className={\r\n                cn(classes.todoListItem,{active: id === active})\r\n            }\r\n            onClick={makeActive(id)}\r\n            >\r\n                <div className={classes.toDoItemWrap}>\r\n                    <div className={classes.commentText}>\r\n                        <span className={classes.innerTexts}\r\n\t\t\t\t\t\t      ref={listRef}>\r\n                            {\r\n                                state ?\r\n                                <Tooltip title={title} className={classes.customWidth}>\r\n\t\t\t\t\t\t\t\t\t<span className={classes.itemText}><span className={classes.title}>{title}</span><span className={classes.dots}>...</span> </span>\r\n                                   \r\n                                </Tooltip>\r\n                                :\r\n                                <span>{title}</span>\r\n                            }\r\n                        </span>\r\n                        {amountOfComments !== 0 ? (\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\tclasses.commentCounter\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tamountOfComments\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : null}\r\n                    </div>\r\n                    <Button\r\n\t\t\t\t\t    variant=\"outlined\"\r\n\t\t\t\t\t    color=\"secondary\"\r\n\t\t\t\t\t    className={classes.deleteBtn}\r\n\t\t\t\t\t    onClick={removeToDo(id)}\r\n\t\t\t\t    >\r\n\t\t\t\t\t    <Translate value=\"removeToDoItem\" />\r\n\t\t\t\t    </Button>\r\n                </div>\r\n            </li>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    comments: state.comments.commentsArray,\r\n    active: state.toDoList.active,\r\n    newToDoId: state.toDoList.newToDoId\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    activateToDo: id => {\r\n\t\tdispatch(activateToDo(id));\r\n\t},\r\n\trmToDo: (list, id) => {\r\n\t\tdispatch(deleteToDo(list));\r\n\t\tdispatch(filterComments(id));\r\n\t}\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListElement);","import { ADD_COMMENT, FILTER_COMMENTS } from '../reducers/commentsReducer';\r\n\r\nexport const addComment = comment => (dispatch, getState) => {\r\n\tdispatch({\r\n\t\ttype: ADD_COMMENT,\r\n\t\tpayload: comment\r\n\t});\r\n};\r\nexport const filterComments = id => (dispatch, getState) => {\r\n\tdispatch({\r\n\t\ttype: FILTER_COMMENTS,\r\n\t\tpayload: id\r\n\t});\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport ListElement from './ToDoListElement';\r\nimport PropTypes from 'prop-types';\r\nconst List = props => {\r\n\tconst { toDoList } = props;\r\n\t\r\n\tconst styles = makeStyles({\r\n\t\ttoDoListWrapper: {\r\n\t\t\tmaxHeight: '80%',\r\n\t\t\toverflowY: 'scroll',\r\n\t\t\toverflowX: 'hidden'\r\n\t\t},\r\n\t\ttodoList: {\r\n\t\t\tlistStyle: 'none',\r\n\t\t\tmargin: '0',\r\n\t\t\tpaddingTop: '30px',\r\n\t\t\tpadding: '0',\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t});\r\n\tconst classes = styles();\r\n\treturn (\r\n\t\t<div className={classes.toDoListWrapper}>\r\n\t\t\t<ul className={classes.todoList}>\r\n\t\t\t\t{toDoList && toDoList.length !== 0\r\n\t\t\t\t\t? toDoList.map(item => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<ListElement key = {item.id} \r\n\t\t\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ListElement>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t: null}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nList.propTypes = {\r\n\t\r\n\ttoDoList: PropTypes.array.isRequired,\r\n\tcomments: PropTypes.array.isRequired,\r\n\tactive: PropTypes.number,\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Translate } from 'react-redux-i18n';\r\nimport { OutlinedInput, Button, makeStyles } from '@material-ui/core';\r\n\r\nconst InputField = props => {\r\n\tconst { addToDo, setIndex, index } = props;\r\n\tconst [inputValue, setState] = useState('');\r\n\tconst inputRef = useRef(0);\r\n\tconst onChangeHandler = e => {\r\n\t\tsetState(e.target.value);\r\n\t};\r\n\r\n\tconst addToDoItem = e => {\r\n\t\tif (inputValue !== '') {\r\n\t\t\tconst date = new Date();\r\n\t\t\taddToDo(inputValue, index, date);\r\n\t\t\tsetIndex();\r\n\t\t\tsetState('');\r\n\t\t\tinputRef.current.firstChild.value = '';\r\n\t\t}\r\n\t};\r\n\tconst styles = makeStyles({\r\n\t\tinputField: {\r\n\t\t\tpaddingTop: '20px',\r\n\t\t\tpaddingBottom: '10px',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'space-between'\r\n\t\t},\r\n\t\ttextField: {\r\n\t\t\twidth: '77%'\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tpadding: '9.5px 14px!important'\r\n\t\t},\r\n\t\tbtn:{\r\n\t\t\tbackgroundColor:'#6AC5FE!important'\r\n\t\t}\r\n\t});\r\n\tconst classes = styles();\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.inputField}>\r\n\t\t\t\t<OutlinedInput\r\n\t\t\t\t\tlabel=\"Type name here\"\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tclasses={{ input: classes.input }}\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\tonClick={addToDoItem}\r\n\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Translate value=\"addNew\" />\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nInputField.propTypes = {\r\n\taddToDo: PropTypes.func.isRequired,\r\n\tsetIndex: PropTypes.func.isRequired,\r\n\tindex: PropTypes.number.isRequired\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { Translate } from 'react-redux-i18n';\r\nimport PropTypes from 'prop-types';\r\nimport { Paper, makeStyles } from '@material-ui/core';\r\nimport {\r\n\taddToDo,\r\n\tsetIndex,\r\n\tactivateToDo\r\n} from '../actions/ToDoList';\r\nimport { connect } from 'react-redux';\r\nimport ToDoList from './toDoList';\r\nimport InputField from './InputField';\r\nconst List = props => {\r\n\tconst {\r\n\t\ttoDoList,\r\n\t\tindex,\r\n\t\taddToDo,\r\n\t\tsetIndex,\r\n\t\tcomments,\r\n\t\tactive,\r\n\t\trmToDo,\r\n\t\tactivateToDo,\r\n\t\tnewToDoId\r\n\t} = props;\r\n\tconst styles = makeStyles({\r\n\t\titemList: {\r\n\t\t\tpadding: '20px 20px 0 20px',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tlist: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\toverflowY: 'scroll',\r\n\t\t\theight: '70vh',\r\n\t\t\tpadding: '30px 30px 30px 0'\r\n\t\t},\r\n\t\ttoDoListHeader: {\r\n\t\t\tpaddingLeft: '30px'\r\n\t\t},\r\n\t\t'@media(max-width:768px)':{\r\n\t\t\tlist:{\r\n\t\t\t\tminHeight: '100vh'\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconst classes = styles();\r\n\treturn (\r\n\t\t<div className={classes.itemList}>\r\n\t\t\t<Paper className={classes.list}>\r\n\t\t\t\t<div className={classes.toDoListHeader}>\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t<Translate value=\"toDoItems\" />\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\taddToDo={addToDo}\r\n\t\t\t\t\t\tsetIndex={setIndex}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ToDoList\r\n\t\t\t\t\ttoDoList={toDoList}\r\n\t\t\t\t\tcomments={comments}\r\n\t\t\t\t\tactive={active}\r\n\t\t\t\t\tactivateToDo={activateToDo}\r\n\t\t\t\t\trmToDo={rmToDo}\r\n\t\t\t\t\tnewToDoId={newToDoId}\r\n\t\t\t\t/>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = state => ({\r\n\ttoDoList: state.toDoList.itemList,\r\n\tcomments: state.comments.commentsArray,\r\n\tindex: state.toDoList.newToDoId,\r\n\tactive: state.toDoList.active,\r\n\tnewToDoId: state.toDoList.newToDoId\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\taddToDo: (todo, key, time) => {\r\n\t\tdispatch(addToDo(todo, key, time));\r\n\t\tdispatch(activateToDo(key));\r\n\t},\r\n\tsetIndex: () => {\r\n\t\tdispatch(setIndex());\r\n\t},\r\n\t\r\n});\r\n\r\nList.propTypes = {\r\n\taddToDo: PropTypes.func.isRequired,\r\n\tsetIndex: PropTypes.func.isRequired,\r\n\ttoDoList: PropTypes.array.isRequired,\r\n\tindex: PropTypes.number.isRequired,\r\n\tactive: PropTypes.number\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React, {useEffect, useState, useRef} from 'react'\r\nimport { makeStyles, Avatar, Tooltip } from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\n\r\nconst CommentListElement = props =>{\r\n    const {body} = props;\r\n    const useStyles = makeStyles({\r\n        square: {\r\n            color: '#ff',\r\n            backgroundColor: deepOrange[500]\r\n        },\r\n        commentItem: {\r\n            display: 'flex',\r\n            margin: '20px 0 0 0',\r\n            paddingBottom: '20px',\r\n            borderBottom: '1px solid lightgrey'\r\n        },\r\n        commentTextArea: {\r\n            paddingLeft: '20px',\r\n            wordWrap: 'break-word',\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis'\r\n            \r\n        },\r\n        dots:{\r\n            color: 'blue',\r\n            fontSize: '2rem'\r\n        },\r\n        wrapper:{\r\n            display: 'grid'\r\n        },\r\n        body:{\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis' \r\n        }\r\n    });\r\n    const classes = useStyles();\r\n\r\n    let listRef = useRef(null);\r\n    const [state, setState] = useState(0);\r\n    useEffect(() => {\r\n        let checker=listRef.current.scrollWidth > listRef.current.offsetWidth;\r\n        setState(checker);\r\n    }, []);\r\n    return(<li className={classes.commentItem}>\r\n        <Avatar variant=\"square\"\r\n\t        className={classes.square} />\r\n        <span className={classes.commentTextArea} ref={listRef}>\r\n            {\r\n                state ?\r\n                <Tooltip title={body}>\r\n                    <span className={classes.wrapper}><span className={classes.body}>{body}</span><span className={classes.dots}>...</span> </span>\r\n                </Tooltip>:\r\n                <span>{body}</span>\r\n            }\r\n        </span>\r\n    </li>)\r\n}\r\n\r\nexport default CommentListElement;","import React, {useState, useRef, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar } from '@material-ui/core';\r\nimport CommentListElement from './CommentListElement';\r\n\r\n\r\n\r\nconst CommentList = props => {\r\n\t\r\n\tconst { comments, active } = props;\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{comments !== undefined\r\n\t\t\t\t? comments.map(item => {\r\n\t\t\t\t\t\treturn item.id === active ? (\r\n\t\t\t\t\t\t\t<CommentListElement key={item.ownId}\r\n\t\t\t\t\t\t\t\tbody={item.body}>\r\n\t\t\t\t\t\t\t</CommentListElement>\r\n\t\t\t\t\t\t) : null;\r\n\t\t\t\t  })\r\n\t\t\t\t: null}\r\n\t\t</ul>\r\n\t);\r\n};\r\nCommentList.propTypes = {\r\n\tcomments: PropTypes.array.isRequired,\r\n\tactive: PropTypes.number\r\n};\r\nexport default CommentList;\r\n","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../actions/Comments';\r\nimport { Translate } from 'react-redux-i18n';\r\nimport {\r\n\tPaper,\r\n\tButton,\r\n\tAvatar,\r\n\tOutlinedInput,\r\n\tmakeStyles\r\n} from '@material-ui/core';\r\nimport CommentList from './CommentList';\r\nconst Comments = props => {\r\n\tconst { ownId, comments, active, itemList } = props;\r\n\tconst inputRef = useRef(0);\r\n\tconst [comment, setState] = useState('');\r\n\r\n\tconst setValue = e => {\r\n\t\tsetState(e.target.value);\r\n\t};\r\n\tconst addComment = e => {\r\n\t\tif (comment !== null && comment.length !== 0) {\r\n\t\t\tprops.addComment({\r\n\t\t\t\tid: active,\r\n\t\t\t\townId: ownId,\r\n\t\t\t\tbody: comment\r\n\t\t\t});\r\n\t\t\tinputRef.current.firstChild.value = '';\r\n\t\t\tsetState('')\r\n\t\t}\r\n\t};\r\n\r\n\tconst styles = makeStyles({\r\n\t\tcommentBlock: {\r\n\t\t\tpadding: '20px 20px 0 20px',\r\n\t\t\theight: '100%'\r\n\t\t},\r\n\t\tcomments: {\r\n\t\t\tpadding: '30px',\r\n\t\t\theight: '82vh',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column'\r\n\t\t},\r\n\t\tcommentsWrapper: {\r\n\t\t\tmaxHeight: '75%',\r\n\t\t\toverflowY: 'scroll',\r\n\t\t\toverflowX: 'hidden'\r\n\t\t},\r\n\t\tcommentFieldWrapper: {\r\n\t\t\tmarginTop: 'auto'\r\n\t\t},\r\n\t\tcommentField: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t\tmarginTop: '10px'\r\n\t\t},\r\n\t\ttextField: {\r\n\t\t\twidth: '77%'\r\n\t\t},\r\n\t\tbtnWithLine: {\r\n\t\t\talignSelf: 'flex-end',\r\n\t\t\tmarginTop: '20px',\r\n\t\t\tdisplay: 'flex'\r\n\t\t},\r\n\t\tlineForBtn: {\r\n\t\t\talignSelf: 'center',\r\n\t\t\twidth: '80%',\r\n\t\t\theight: '1px',\r\n\t\t\tbackground: 'lightgrey'\r\n\t\t},\r\n\t\tbtn: {\r\n\t\t\twidth: '20%',\r\n\t\t\tbackgroundColor: '#6AC5FE!important'\r\n\t\t},\r\n\t\t\"@media(max-width(768px)\":{\r\n\t\t\tcommentBlock:{\r\n\t\t\t\tmarginTop:'10px'\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconst classes = styles();\r\n\tlet commentId = itemList.filter(item => item.id === active);\r\n\treturn (\r\n\t\t<div className={classes.commentBlock}>\r\n\t\t\t<Paper className={classes.comments}>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t<Translate value=\"comments\" />\r\n\t\t\t\t\t{active !== null ? (\r\n\t\t\t\t\t\t<span>#{commentId[0].ownId + 1}</span>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t{active !== null ? (\r\n\t\t\t\t\t<div className={classes.commentsWrapper}>\r\n\t\t\t\t\t\t<CommentList\r\n\t\t\t\t\t\t\tcomments={comments}\r\n\t\t\t\t\t\t\tactive={active}\r\n\t\t\t\t\t\t\taddComment={addComment}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t\t{active !== null ? (\r\n\t\t\t\t\t<div className={classes.commentFieldWrapper}>\r\n\t\t\t\t\t\t<div className={classes.commentField}>\r\n\t\t\t\t\t\t\t<Avatar sizes=\"medium\" variant=\"square\" />\r\n\t\t\t\t\t\t\t<OutlinedInput\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t\t\t\trowsMax={3}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={classes.btnWithLine}>\r\n\t\t\t\t\t\t\t<div className={classes.lineForBtn}></div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\t\t\tonClick={addComment}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Translate value=\"addNew\" />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tcomments: state.comments.commentsArray,\r\n\titemList: state.toDoList.itemList,\r\n\tactive: state.toDoList.active,\r\n\townId: state.comments.commentId\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\taddComment: comment => {\r\n\t\tdispatch(addComment(comment));\r\n\t}\r\n});\r\n\r\nComments.propTypes = {\r\n\tcomments: PropTypes.array.isRequired,\r\n\tactive: PropTypes.number,\r\n\townId: PropTypes.number.isRequired,\r\n\taddComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n","import React from 'react';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport List from './List';\r\nimport Comments from './Comments';\r\n\r\nconst styles=makeStyles({\r\n\ttable:{\r\n\t\theight:\"100%\"\r\n\t},\r\n\t'@global':{\r\n\t\tbody:{\r\n\r\n\t\t},\r\n\t\t\"::-webkit-scrollbar\": {\r\n\t\t\tdisplay: \"none\"\r\n\t\t},\r\n\t\th2:{\r\n\t\t\tfontSize: \"40px\",\r\n\t\t\tfontWeight: \"100\",\r\n\t\t  }\r\n\r\n\t},\r\n\t\r\n})\r\n\r\n\r\nconst TodoSection = () => {\r\n\tconst classes = styles();\r\n\treturn (\r\n\t\t<div className={classes.table}>\r\n\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t<Grid item xs={12} md={6} style={{ minHeight: 600 }}>\r\n\t\t\t\t\t<List />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t<Comments />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoSection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport { Translate } from 'react-redux-i18n';\r\nimport { makeStyles } from '@material-ui/core';\r\nconst options = [\r\n\t{ value: 'en', label: 'English' },\r\n\t{ value: 'ru', label: 'Русский' }\r\n];\r\n\r\nconst myStyles = {\r\n\toption: (provided, state) => ({\r\n\t\t...provided,\r\n\t\tbackground: 'none'\r\n\t}),\r\n\tmenu: (provided, state) => ({\r\n\t\t...provided,\r\n\t\tbackgroundColor: '#F7AE4C',\r\n\t\tcolor: 'white'\r\n\t}),\r\n\tcontrol: (provided, state) => ({\r\n\t\t...provided,\r\n\t\tbackground: '#22A8FE',\r\n\t\tborder: 'none'\r\n\t}),\r\n\tvalueContainer: (provided, state) => ({\r\n\t\t...provided,\r\n\t\tjustifyContent: 'center'\r\n\t}),\r\n\tplaceholder: (provided, state) => ({\r\n\t\t...provided,\r\n\t\tcolor: 'white'\r\n\t}),\r\n\tsingleValue: (provided, state) => ({\r\n\t\t...provided,\r\n\t\tcolor: 'white'\r\n\t})\r\n};\r\nconst styles = makeStyles({\r\n\tbasicSingle: {\r\n\t\twidth: '30%',\r\n\t\talignSelf: 'center',\r\n\t\tmarginBottom: '40%'\r\n  },\r\n  sidebar: {\r\n    background: \"#316A82\",\r\n    color: \"white !important\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  h2:{\r\n    padding: \"40px 0 0 40px\",\r\n  },\r\n  '@media(max-width: 768px)':{\r\n\tbasicSingle:{\r\n\t\tmarginBottom: '30%'\r\n\t},\r\n\tsidebar:{\r\n\t\tminHeight: '100vh'\r\n\t}\r\n  }\r\n});\r\n\r\nconst Sidebar = props => {\r\n\tconst { changeLocale } = props;\r\n\tconst changeLanguage = locale => {\r\n\t\tchangeLocale(locale.value);\r\n\t};\r\n\tconst classes = styles();\r\n\treturn (\r\n\t\t<div className={classes.sidebar}>\r\n\t\t\t<h2 className={classes.h2}>\r\n\t\t\t\t<Translate value=\"toDo\" />\r\n\t\t\t</h2>\r\n\t\t\t<Select\r\n\t\t\t\tdefaultValue=\"en\"\r\n\t\t\t\tclassName={classes.basicSingle}\r\n\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\toptions={options}\r\n\t\t\t\tname=\"color\"\r\n\t\t\t\tstyles={myStyles}\r\n\t\t\t\tisSearchable={false}\r\n\t\t\t\tcomponents={{\r\n\t\t\t\t\tDropdownIndicator: () => null,\r\n\t\t\t\t\tIndicatorSeparator: () => null\r\n\t\t\t\t}}\r\n\t\t\t\tonChange={changeLanguage}\r\n\t\t\t\tplaceholder=\"Language\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSidebar.propTypes = {\r\n\tchangeLocale: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport {setLocale} from 'react-redux-i18n';\r\nimport {connect} from 'react-redux';\r\nimport TodoSection from './components/TodoSection';\r\nimport Sidebar from './components/Sidebar';\r\n\r\n\r\n\r\nconst styles=makeStyles({\r\n\tmainWrapper:{\r\n\t\theight:\" 100vh\",\r\n\t},\r\n})\r\nfunction App(props) {\r\n\tconst classes = styles();\r\n\tconst {changeLocale,} = props;\r\n\treturn (\r\n\t\t\t<Grid  container className={classes.mainWrapper}>\r\n\t\t\t\t<Grid item xs={12} md={3} height={1}>\r\n\t\t\t\t\t<Sidebar changeLocale={changeLocale}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={9}>\r\n\t\t\t\t\t<TodoSection />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\n\r\nconst mapDispatchToProps =(dispatch)=> ({\r\n\tchangeLocale: (lang)=>{\r\n\t\tdispatch(setLocale(lang))\r\n\t  }\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(App);\r\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\r\nimport {commentsReducer} from '../reducers/commentsReducer';\r\nimport {toDoListReducer} from '../reducers/toDoListReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { loadTranslations, setLocale, syncTranslationWithStore, i18nReducer } from 'react-redux-i18n';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst logger = createLogger({\r\n\t// ...options\r\n});\r\n\r\nconst middlewares = [ thunk, logger ];\r\n\r\nconst translationObject = {\r\n\ten: {\r\n\t\ttoDo: 'TODO',\r\n\t\tlanguages: 'Languages',\r\n\t\ttoDoItems: 'Items',\r\n\t\tremoveToDoItem: 'Delete',\r\n\t\taddNew: 'Add new',\r\n\t\tcomments: 'Comments',\r\n\t},\r\n\tru: {\r\n\t\ttoDo: 'Список дел',\r\n\t\tlanguages: 'Языки',\r\n\t\ttoDoItems: 'Дела',\r\n\t\tremoveToDoItem: 'Удалить',\r\n\t\taddNew: 'Добавить',\r\n\t\tcomments: 'Комментарии',\r\n\t},\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n\ti18n: i18nReducer,\r\n\ttoDoList: toDoListReducer,\r\n\tcomments: commentsReducer\r\n});\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers(applyMiddleware(...middlewares)),\r\n);\r\n\r\nsyncTranslationWithStore(store);\r\nstore.dispatch(loadTranslations(translationObject));\r\nstore.dispatch(setLocale('en'));\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}