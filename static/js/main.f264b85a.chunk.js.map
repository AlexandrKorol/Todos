{"version":3,"sources":["reducers/reducers.js","redux/store.js","components/toDoList.js","components/InputField.js","components/List.js","components/CommentList.js","components/Comments.js","components/TodoSection.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["initialState","locale","itemList","comments","active","newToDoId","commentId","reducer","state","action","type","payload","result","filter","item","id","payload2","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","logger","createLogger","middlewares","thunk","rootReducer","combineReducers","i18n","i18nReducer","todoState","reducers","store","createStore","applyMiddleware","syncTranslationWithStore","dispatch","loadTranslations","en","toDo","languages","toDoItems","removeToDoItem","addNew","ru","setLocale","connect","list","activateToDo","deleteToDo","props","useStyles","makeStyles","theme","popover","pointerEvents","paper","padding","spacing","useState","anchorEl","removeToDo","e","stopPropagation","newList","Boolean","className","length","map","key","onClick","Tooltip","title","Typography","commentItem","Button","variant","color","classes","root","value","toDoList","index","addToDo","todo","time","createAt","setIndex","inputValue","setState","inputRef","useRef","OutlinedInput","label","onChange","target","ref","size","date","Date","current","firstChild","List","Paper","square","backgroundColor","deepOrange","CommentList","undefined","ownId","Avatar","body","postId","addComment","comment","sizes","multiline","rowsMax","TodoSection","Grid","container","justify","xs","md","style","minHeight","options","myStyles","option","provided","background","menu","control","border","valueContainer","justifyContent","placeholder","singleValue","changeLocale","lang","defaultValue","classNamePrefix","name","styles","isSearchable","components","DropdownIndicator","IndicatorSeparator","App","display","height","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f264b85a.chunk.js","sourcesContent":["const initialState={\r\n    locale: \"en\",\r\n    itemList: [\r\n\r\n    ],\r\n    comments:[],\r\n    active: null,\r\n    newToDoId:0,\r\n    commentId:0,\r\n}\r\n\r\nconst reducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_TODO\":\r\n            return{\r\n                ...state,\r\n                itemList:[...state.itemList, action.payload]\r\n            }\r\n        case \"GET_INDEX\":\r\n            return{\r\n                ...state,\r\n                newToDoId: state.newToDoId + 1\r\n            }\r\n        case \"ACTIVATE_TODO\":\r\n            return{\r\n                ...state,\r\n                active: action.payload\r\n            }\r\n        case \"DELETE_TODO\":\r\n            let result = state.comments.filter(item=>item.id !== action.payload2)\r\n            return{\r\n                ...state,\r\n                itemList: action.payload,\r\n                comments: result,\r\n                active: null\r\n            }\r\n        case \"ADD_COMMENT\":\r\n            return{\r\n                ...state,\r\n                comments: [...state.comments, action.payload],\r\n                commentId: state.commentId + 1\r\n            }\r\n        default: return state\r\n    }\r\n    return state;\r\n}\r\nexport default reducer;","import { createStore, compose, combineReducers,applyMiddleware  } from 'redux';\r\nimport reducers from \"../reducers/reducers\";\r\nimport thunk from 'redux-thunk';\r\nimport { loadTranslations, setLocale, syncTranslationWithStore, i18nReducer } from 'react-redux-i18n';\r\nimport { createLogger } from 'redux-logger'\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst logger = createLogger({\r\n    // ...options\r\n  });\r\n\r\nconst middlewares = [thunk,logger]\r\n\r\nconst translationObject={\r\n    en:{\r\n        toDo: 'TODO',\r\n        languages: 'Languages',\r\n        toDoItems: 'Items',\r\n        removeToDoItem: 'Delete',\r\n        addNew: 'Add new',\r\n        comments: 'Comments'\r\n    },\r\n    ru:{\r\n        toDo: 'Список дел',\r\n        languages: \"Языки\",\r\n        toDoItems: 'Дела',\r\n        removeToDoItem: 'Удалить',\r\n        addNew: 'Добавить',\r\n        comments: 'Комментарии'\r\n    }\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    i18n: i18nReducer,\r\n    todoState: reducers\r\n  }) \r\n\r\nconst store =  createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares)),\r\n  );\r\n\r\n\r\nsyncTranslationWithStore(store)\r\nstore.dispatch(loadTranslations(translationObject));\r\nstore.dispatch(setLocale('en'));\r\nexport default store;","import React, { useState } from \"react\";\r\nimport { Translate } from \"react-redux-i18n\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst List = props => {\r\n  const useStyles = makeStyles(theme => ({\r\n    popover: {\r\n      pointerEvents: \"none\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handlePopoverOpen = (event, id) => {\r\n    popID = id;\r\n    setAnchorEl(event.target);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    popID = null;\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const makeActive = id => e => {\r\n    const { activateToDo } = props;\r\n    activateToDo(id);\r\n  };\r\n  const removeToDo = id => e => {\r\n    e.stopPropagation();\r\n    let newList = props.list.filter(item => {\r\n      return item.id !== id;\r\n    });\r\n    const { deleteToDo } = props;\r\n    deleteToDo(newList, id);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  let popID = null;\r\n  return (\r\n    <div className=\"toDoListWrapper\">\r\n      <ul className=\"todoList\">\r\n        {props.list && props.list.length !== 0\r\n          ? props.list.map(item => {\r\n              return (\r\n                <li\r\n                  key={item.id}\r\n                  className={\r\n                    item.id === props.active\r\n                      ? \"todoListItem active\"\r\n                      : \"todoListItem\"\r\n                  }\r\n                  onClick={makeActive(item.id)}\r\n                >\r\n                  <div className=\"toDoItemWrap\">\r\n                    <Tooltip title={item.title}>\r\n                      <Typography>\r\n                        {item.title}\r\n                        {props.comments.filter(\r\n                          commentItem => item.id === commentItem.id\r\n                        ).length !== 0 ? (\r\n                          <span className=\"commentCounter\">\r\n                            {\r\n                              props.comments.filter(\r\n                                commentItem => item.id === commentItem.id\r\n                              ).length\r\n                            }\r\n                          </span>\r\n                        ) : null}\r\n                      </Typography>\r\n                    </Tooltip>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      classes={{ root: \"deleteBtn\" }}\r\n                      onClick={removeToDo(item.id)}\r\n                    >\r\n                      <Translate value=\"removeToDoItem\" />{\" \"}\r\n                    </Button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.todoState.itemList,\r\n    comments: state.todoState.comments,\r\n    active: state.todoState.active\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  activateToDo: id => {\r\n    dispatch({\r\n      type: \"ACTIVATE_TODO\",\r\n      payload: id\r\n    });\r\n  },\r\n  deleteToDo: (list, id) => {\r\n    dispatch({\r\n      type: \"DELETE_TODO\",\r\n      payload: list,\r\n      payload2: id\r\n    });\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Translate } from \"react-redux-i18n\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst InputField = props => {\r\n  const [inputValue, setState] = useState(0);\r\n  const inputRef = useRef(0);\r\n  const onChangeHandler = e => {\r\n\r\n    setState(e.target.value);\r\n  };\r\n\r\n  const addToDoItem = e => {\r\n    if (inputValue === \"\") {\r\n      return null;\r\n    } else {\r\n      const { addToDo, setIndex, index } = props;\r\n      const date = new Date();\r\n      addToDo(inputValue, index, date);\r\n      setState(\"\");\r\n      inputRef.current.firstChild.value = \"\";\r\n      setIndex();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"inputField\">\r\n        <OutlinedInput\r\n          label=\"Type name here\"\r\n          classes={{root:\"textField\"}}\r\n          onChange={onChangeHandler}\r\n          ref={inputRef}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          onClick={addToDoItem}\r\n        >\r\n          <Translate value=\"addNew\" />\r\n        </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    toDoList: state.todoState.itemList,\r\n    index: state.todoState.newToDoId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addToDo: (todo, key, time) => {\r\n    dispatch({\r\n      type: \"ADD_TODO\",\r\n      payload: {\r\n        title: todo,\r\n        id: key,\r\n        comments: [],\r\n        createAt: time\r\n      }\r\n    });\r\n  },\r\n  setIndex: () => {\r\n    dispatch({\r\n      type: \"GET_INDEX\"\r\n    });\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\r\n","import React from \"react\";\r\nimport { Translate } from \"react-redux-i18n\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ToDoList from \"./toDoList\";\r\nimport InputField from \"./InputField\";\r\nconst List = () => {\r\n  return (\r\n    <div className=\"itemlist\">\r\n      <Paper className=\"list\">\r\n        <div className=\"toDoListHeader\">\r\n          <h2>\r\n            <Translate value=\"toDoItems\" />{\" \"}\r\n          </h2>\r\n          <InputField />\r\n        </div>\r\n        <ToDoList />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  square: {\r\n    color: \"#ff\",\r\n    backgroundColor: deepOrange[500]\r\n  }\r\n}));\r\n\r\nconst CommentList = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ul>\r\n      {props.comments !== undefined\r\n        ? props.comments.map(item => {\r\n            return item.id === props.active ? (\r\n              <li key={item.ownId} className=\"commentItem\">\r\n                <Avatar variant=\"square\" className={classes.square} />\r\n                <span className='commentTextArea'>{item.body}</span>\r\n              </li>\r\n            ) : null;\r\n          })\r\n        : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Translate } from \"react-redux-i18n\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CommentList from \"./CommentList\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { OutlinedInput } from \"@material-ui/core\";\r\nconst Comments = props => {\r\n  const inputRef = useRef(0);\r\n  const [comment, setState] = useState(0);\r\n\r\n  const setValue = e => {\r\n    setState(e.target.value);\r\n  };\r\n  const addComment = () => e => {\r\n    if (comment.length === 0) {\r\n      return null;\r\n    } else {\r\n      props.addComment({\r\n        id: props.postId,\r\n        ownId: props.ownId,\r\n        body: comment\r\n      });\r\n      inputRef.current.firstChild.value = \"\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"commentBlock\">\r\n      <Paper className=\"comments\">\r\n        <h2>\r\n          <Translate value=\"comments\" />\r\n          {props.postId !== null ? <span>#{props.postId + 1}</span> : null}{\" \"}\r\n        </h2>\r\n\r\n        {props.postId !== null ? (\r\n          <div className=\"commentsWrapper\">\r\n            <CommentList comments={props.comments} active={props.active} />\r\n          </div>\r\n        ) : null}\r\n        {props.postId !== null ? (\r\n          <div className=\"commentFieldWrapper\">\r\n            <div className=\"commentField\">\r\n              <Avatar sizes=\"medium\" variant=\"square\" />{\" \"}\r\n                <OutlinedInput\r\n                    multiline\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    className=\"textField\"\r\n                    size=\"small\"\r\n                    onChange={setValue}\r\n                    ref={inputRef}\r\n                    rowsMax={3}\r\n                />\r\n            </div>\r\n            <div className=\"btnWithLine\">\r\n              <div className=\"lineForBtn\"></div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    className=\"btn\"\r\n                    onClick={addComment()}\r\n                >\r\n                <Translate value=\"addNew\" />{\" \"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postId: state.todoState.active,\r\n    ownId: state.todoState.commentId,\r\n    comments: state.todoState.comments,\r\n    active: state.todoState.active\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addComment: comment => {\r\n    dispatch({\r\n      type: \"ADD_COMMENT\",\r\n      payload: comment\r\n    });\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from './List';\r\nimport Comments from './Comments';\r\nconst TodoSection = () =>{\r\n    \r\n    return(\r\n        <div className=\"table\">\r\n            <Grid container justify=\"center\" className=\"todosec\"> \r\n                <Grid item  xs={12} md={6} style={{minHeight:600}}>\r\n                    <List />\r\n                </Grid>\r\n                <Grid item  xs={12} md={6}>\r\n                    <Comments />\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoSection;","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Translate } from \"react-redux-i18n\";\r\nimport { setLocale } from \"react-redux-i18n\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst options = [\r\n  { value: \"en\", label: \"English\" },\r\n  { value: \"ru\", label: \"Русский\" }\r\n];\r\n\r\nconst myStyles = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    background: \"none\"\r\n  }),\r\n  menu: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: \"#F7AE4C\",\r\n    color: \"white\"\r\n  }),\r\n  control: (provided, state) => ({\r\n    ...provided,\r\n    background: \"#22A8FE\",\r\n    border: \"none\"\r\n  }),\r\n  valueContainer: (provided, state) => ({\r\n    ...provided,\r\n    justifyContent: \"center\"\r\n  }),\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    color: \"white\"\r\n  }),\r\n  singleValue: (provided, state) => ({\r\n    ...provided,\r\n    color: \"white\"\r\n  })\r\n};\r\n\r\nconst Sidebar = props => {\r\n  const changeLanguage = locale => {\r\n    props.changeLocale(locale.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h2>\r\n        <Translate value=\"toDo\" />\r\n      </h2>\r\n      <Select\r\n        defaultValue=\"en\"\r\n        className=\"basic-single\"\r\n        classNamePrefix=\"select\"\r\n        options={options}\r\n        name=\"color\"\r\n        styles={myStyles}\r\n        isSearchable={false}\r\n        components={{\r\n          DropdownIndicator: () => null,\r\n          IndicatorSeparator: () => null\r\n        }}\r\n        onChange={changeLanguage}\r\n        placeholder=\"Language\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeLocale: lang => {\r\n    dispatch(setLocale(lang));\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport TodoSection from './components/TodoSection';\nimport Sidebar from './components/Sidebar'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    \n        <Provider store={store}>\n           \n           \n            <Grid display='flex' container className='mainWrapper'>\n                  <Grid item xs={12} md={3} height={1}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item  xs={12} md={9}>\n                    <TodoSection />\n                  </Grid>\n              </Grid>\n           \n        </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}